///////////////https://leetcode.com/problems/binary-tree-cameras/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public int minCameraCover(TreeNode root) {
        int root_state = solve(root);    
        if(root_state==0) camera++;
        return camera;
    }
    public int camera =0;
    public int solve(TreeNode root){
        if(root == null) return 1;
        int lc = solve(root.left);
        int rc = solve(root.right);
        if(lc==0||rc==0) {
            camera++;
            return -1;
        }
        if(lc==-1 || rc==-1) return 1;
        return 0;
    }
}
