
//https://www.pepcoding.com/resources/online-java-foundation/recursion-backtracking/n-queens-official/ojquestion


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int chess[][] = new int[n][n];
        printNQueens(chess,"",0);
        
        
    }

    public static void printNQueens(int[][] chess, String qsf, int row) {
        
        if(row==chess.length){
            System.out.println(qsf+".");
            return;
        }
        
        for(int col =0;col<chess.length;col++){
            if(isValid(chess,row,col)==true){
                chess[row][col] = 1;
                printNQueens(chess,qsf+row+"-"+col+", ",row+1);
                chess[row][col] = 0;   
                
            }
        }
        return;
    }
    
    public static boolean isValid(int[][] chess,int r,int c){
        
        int row =chess.length;
        int col = row;
        int tempr = r;
        int tempc = c;
        if(tempr>row-1 || tempr<0 || tempc>col-1||tempc<0) return false;
        while(tempr>0){
            if(chess[tempr-1][tempc]==1) return false;
            tempr--;
        }
        tempr = r;
        tempc = c;
         while(tempr>0 && tempc>0){
            if(chess[tempr-1][tempc-1]==1) return false;
            tempr--;
            tempc--;
        }
        tempr = r;
        tempc = c;
        while(tempr>0 && tempc+1<col){
            if(chess[tempr-1][tempc+1]==1) return false;
            tempr--;
            tempc++;
        }
        
        return true;
        
        
        
        
    }
}
