///////// https://classroom.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/recursion-and-backtracking/all-palindromic-permutations-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {

	public static void generatepw(int cs, int ts, HashMap<Character, Integer> fmap, Character oddc, String asf) {
	    
	    if(cs==ts+1){
	        String reverse ="";
	        for(int i=asf.length()-1;i>=0;i--){
	               reverse+=asf.charAt(i);
	            }
	        if(oddc!=null) System.out.println(asf+oddc+reverse);
	        else System.out.println(asf+reverse);
	        return;
	    }
	    
	    for(char c:fmap.keySet()){
	        int temp = fmap.get(c);
	        if(temp>0){
	            fmap.put(c,temp-1);
	            generatepw(cs+1,ts,fmap,oddc,asf+c);
	            fmap.put(c,temp);
	        }
	    }
		
	}

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		String str = scn.next();
		HashMap<Character, Integer> fmap = new HashMap<>();
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);
			if(fmap.containsKey(ch)){
			   int temp = fmap.get(ch);
			   fmap.put(ch,temp+1);
			}else{
			    fmap.put(ch,1);
			}
		}
		
		
		Character oddc = null;
		int cooc =0;
		int length =0;
		for(Character ch:fmap.keySet()){
		    int freq = fmap.get(ch);
		    if(freq%2==1){
		        oddc=ch;
		        cooc+=1;
		    }
		    length+=(freq/2);
		    fmap.put(ch,freq/2);
		}
		if(cooc>1){
		    System.out.println("-1");
		    return;
		}
		else{
		    generatepw(1,length,fmap,oddc,"");
		    
		}
		
	}
	
}
